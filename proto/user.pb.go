// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// user request with single id
type RequestUser struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestUser) Reset()         { *m = RequestUser{} }
func (m *RequestUser) String() string { return proto.CompactTextString(m) }
func (*RequestUser) ProtoMessage()    {}
func (*RequestUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *RequestUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestUser.Unmarshal(m, b)
}
func (m *RequestUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestUser.Marshal(b, m, deterministic)
}
func (m *RequestUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestUser.Merge(m, src)
}
func (m *RequestUser) XXX_Size() int {
	return xxx_messageInfo_RequestUser.Size(m)
}
func (m *RequestUser) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestUser.DiscardUnknown(m)
}

var xxx_messageInfo_RequestUser proto.InternalMessageInfo

func (m *RequestUser) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// user request with multiple ids
type RequestUsers struct {
	UserId               []int64  `protobuf:"varint,1,rep,packed,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestUsers) Reset()         { *m = RequestUsers{} }
func (m *RequestUsers) String() string { return proto.CompactTextString(m) }
func (*RequestUsers) ProtoMessage()    {}
func (*RequestUsers) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *RequestUsers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestUsers.Unmarshal(m, b)
}
func (m *RequestUsers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestUsers.Marshal(b, m, deterministic)
}
func (m *RequestUsers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestUsers.Merge(m, src)
}
func (m *RequestUsers) XXX_Size() int {
	return xxx_messageInfo_RequestUsers.Size(m)
}
func (m *RequestUsers) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestUsers.DiscardUnknown(m)
}

var xxx_messageInfo_RequestUsers proto.InternalMessageInfo

func (m *RequestUsers) GetUserId() []int64 {
	if m != nil {
		return m.UserId
	}
	return nil
}

// user response
type ResponseUser struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Fname                string   `protobuf:"bytes,2,opt,name=fname,proto3" json:"fname,omitempty"`
	City                 string   `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Phone                uint64   `protobuf:"varint,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Height               float32  `protobuf:"fixed32,5,opt,name=height,proto3" json:"height,omitempty"`
	Married              bool     `protobuf:"varint,6,opt,name=married,proto3" json:"married,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseUser) Reset()         { *m = ResponseUser{} }
func (m *ResponseUser) String() string { return proto.CompactTextString(m) }
func (*ResponseUser) ProtoMessage()    {}
func (*ResponseUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *ResponseUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseUser.Unmarshal(m, b)
}
func (m *ResponseUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseUser.Marshal(b, m, deterministic)
}
func (m *ResponseUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseUser.Merge(m, src)
}
func (m *ResponseUser) XXX_Size() int {
	return xxx_messageInfo_ResponseUser.Size(m)
}
func (m *ResponseUser) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseUser.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseUser proto.InternalMessageInfo

func (m *ResponseUser) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ResponseUser) GetFname() string {
	if m != nil {
		return m.Fname
	}
	return ""
}

func (m *ResponseUser) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *ResponseUser) GetPhone() uint64 {
	if m != nil {
		return m.Phone
	}
	return 0
}

func (m *ResponseUser) GetHeight() float32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ResponseUser) GetMarried() bool {
	if m != nil {
		return m.Married
	}
	return false
}

// multiple user response
type ResponseUsers struct {
	Users                []*ResponseUser `protobuf:"bytes,1,rep,name=Users,proto3" json:"Users,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ResponseUsers) Reset()         { *m = ResponseUsers{} }
func (m *ResponseUsers) String() string { return proto.CompactTextString(m) }
func (*ResponseUsers) ProtoMessage()    {}
func (*ResponseUsers) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *ResponseUsers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseUsers.Unmarshal(m, b)
}
func (m *ResponseUsers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseUsers.Marshal(b, m, deterministic)
}
func (m *ResponseUsers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseUsers.Merge(m, src)
}
func (m *ResponseUsers) XXX_Size() int {
	return xxx_messageInfo_ResponseUsers.Size(m)
}
func (m *ResponseUsers) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseUsers.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseUsers proto.InternalMessageInfo

func (m *ResponseUsers) GetUsers() []*ResponseUser {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*RequestUser)(nil), "protopb.RequestUser")
	proto.RegisterType((*RequestUsers)(nil), "protopb.RequestUsers")
	proto.RegisterType((*ResponseUser)(nil), "protopb.ResponseUser")
	proto.RegisterType((*ResponseUsers)(nil), "protopb.ResponseUsers")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0x86, 0xbb, 0x69, 0x9b, 0x7c, 0x9d, 0x7e, 0x15, 0x59, 0xda, 0xba, 0xf4, 0x14, 0x72, 0xd0,
	0x80, 0x90, 0x43, 0x3d, 0x2a, 0x1e, 0xf4, 0x50, 0x3c, 0xf4, 0xb2, 0xc5, 0x8b, 0x17, 0x49, 0x9b,
	0xb1, 0x59, 0x48, 0x36, 0x71, 0x77, 0x23, 0xf8, 0x2f, 0xfc, 0x01, 0xfe, 0x58, 0xc9, 0x26, 0x96,
	0x08, 0x39, 0xcd, 0xbc, 0xc9, 0xc3, 0xc3, 0xbb, 0x03, 0x50, 0x69, 0x54, 0x51, 0xa9, 0x0a, 0x53,
	0x50, 0xcf, 0x8e, 0x72, 0x1f, 0x5c, 0xc2, 0x94, 0xe3, 0x7b, 0x85, 0xda, 0x3c, 0x6b, 0x54, 0xf4,
	0x02, 0xbc, 0x9a, 0x7a, 0x15, 0x09, 0x23, 0x3e, 0x09, 0x87, 0xdc, 0xad, 0xe3, 0x53, 0x12, 0x5c,
	0xc1, 0xff, 0x0e, 0xa7, 0xff, 0x82, 0xc3, 0x0e, 0xf8, 0x45, 0x6a, 0x52, 0x97, 0x85, 0xd4, 0x68,
	0x95, 0x67, 0xe0, 0x9c, 0x6c, 0x8e, 0x48, 0xe8, 0x1c, 0xc6, 0x6f, 0x32, 0xce, 0x91, 0x39, 0x3e,
	0x09, 0x27, 0xbc, 0x09, 0x94, 0xc2, 0xe8, 0x20, 0xcc, 0x27, 0x1b, 0xda, 0x8f, 0x76, 0xaf, 0xc9,
	0x32, 0x2d, 0x24, 0xb2, 0x91, 0x4f, 0xc2, 0x11, 0x6f, 0x02, 0x5d, 0x82, 0x9b, 0xa2, 0x38, 0xa6,
	0x86, 0x8d, 0x7d, 0x12, 0x3a, 0xbc, 0x4d, 0x94, 0x81, 0x97, 0xc7, 0x4a, 0x09, 0x4c, 0x98, 0xeb,
	0x93, 0xf0, 0x1f, 0xff, 0x8d, 0xc1, 0x1d, 0xcc, 0xba, 0x8d, 0x34, 0xbd, 0x86, 0xb1, 0x5d, 0x6c,
	0xf5, 0xe9, 0x7a, 0x11, 0xb5, 0xd7, 0x88, 0xba, 0x18, 0x6f, 0x98, 0xf5, 0x37, 0x81, 0x45, 0xbd,
	0x6d, 0x63, 0x19, 0x1f, 0x31, 0x47, 0x69, 0x76, 0xa8, 0x3e, 0xc4, 0x01, 0xe9, 0x3d, 0xcc, 0x36,
	0x68, 0x76, 0x42, 0x1e, 0xb3, 0xe6, 0xa9, 0xf3, 0x8e, 0xe8, 0x74, 0xab, 0x55, 0xbf, 0x3e, 0x18,
	0xd0, 0x47, 0x38, 0xdf, 0xa0, 0xd9, 0x56, 0x99, 0x11, 0x65, 0xd6, 0x56, 0x5b, 0xf4, 0x29, 0xf4,
	0x6a, 0xd9, 0xeb, 0xd0, 0xc1, 0xe0, 0x61, 0xf2, 0xe2, 0x45, 0xb7, 0xf6, 0xe7, 0xde, 0xb5, 0xe3,
	0xe6, 0x27, 0x00, 0x00, 0xff, 0xff, 0x19, 0x02, 0x31, 0x86, 0xe9, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserManagementServiceClient is the client API for UserManagementService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserManagementServiceClient interface {
	GetSingleUser(ctx context.Context, in *RequestUser, opts ...grpc.CallOption) (*ResponseUser, error)
	GetMultipleUsers(ctx context.Context, in *RequestUsers, opts ...grpc.CallOption) (*ResponseUsers, error)
}

type userManagementServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserManagementServiceClient(cc *grpc.ClientConn) UserManagementServiceClient {
	return &userManagementServiceClient{cc}
}

func (c *userManagementServiceClient) GetSingleUser(ctx context.Context, in *RequestUser, opts ...grpc.CallOption) (*ResponseUser, error) {
	out := new(ResponseUser)
	err := c.cc.Invoke(ctx, "/protopb.UserManagementService/GetSingleUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagementServiceClient) GetMultipleUsers(ctx context.Context, in *RequestUsers, opts ...grpc.CallOption) (*ResponseUsers, error) {
	out := new(ResponseUsers)
	err := c.cc.Invoke(ctx, "/protopb.UserManagementService/GetMultipleUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserManagementServiceServer is the server API for UserManagementService service.
type UserManagementServiceServer interface {
	GetSingleUser(context.Context, *RequestUser) (*ResponseUser, error)
	GetMultipleUsers(context.Context, *RequestUsers) (*ResponseUsers, error)
}

// UnimplementedUserManagementServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserManagementServiceServer struct {
}

func (*UnimplementedUserManagementServiceServer) GetSingleUser(ctx context.Context, req *RequestUser) (*ResponseUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSingleUser not implemented")
}
func (*UnimplementedUserManagementServiceServer) GetMultipleUsers(ctx context.Context, req *RequestUsers) (*ResponseUsers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMultipleUsers not implemented")
}

func RegisterUserManagementServiceServer(s *grpc.Server, srv UserManagementServiceServer) {
	s.RegisterService(&_UserManagementService_serviceDesc, srv)
}

func _UserManagementService_GetSingleUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementServiceServer).GetSingleUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protopb.UserManagementService/GetSingleUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementServiceServer).GetSingleUser(ctx, req.(*RequestUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManagementService_GetMultipleUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestUsers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagementServiceServer).GetMultipleUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protopb.UserManagementService/GetMultipleUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagementServiceServer).GetMultipleUsers(ctx, req.(*RequestUsers))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserManagementService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protopb.UserManagementService",
	HandlerType: (*UserManagementServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSingleUser",
			Handler:    _UserManagementService_GetSingleUser_Handler,
		},
		{
			MethodName: "GetMultipleUsers",
			Handler:    _UserManagementService_GetMultipleUsers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
